name: CI Arcade
on:
  push:
    branches-ignore:
      - feature/ignore
  pull_request:
    branches-ignore:
      - feature/ignore

env:
  MIRROR_URL: "git@github.com:EpitechPromo2026/B-OOP-400-BDX-4-1-arcade-luka.camus.git"
  EXECUTABLE: "arcade"

jobs:
  check_repository_cleanliness:
    name: "Check if the repository is clean and void of any unwanted files (temp, files, binary files, etc.)"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Scan files
      run: |
        arr=($(find . \( -name "#*#" -o -name "*~" \
        -o -name "*.o" -o -name "*.a" \
        -o -name "*.so" -o -name "*.gcno" -o -name "*.gcda" -o -name "*.gcov" \
         -o -path '*tmp/*' \)))
        for i in ${arr[@]}; do echo "::error file=$i,line=1,endLine=1,title=Unwanted file detected::$i"; done
        if ((${#arr[@]})); then
          exit 1
        fi

# need to change a few things in compilation
#  run_program:
#    runs-on: ubuntu-latest
#    needs: check_repository_cleanliness
#    container:
#      image: epitechcontent/epitest-docker:latest
#    steps:
#    - uses: actions/checkout@v2
#      with:
#        fetch-depth: 0
#    - name: Compilation test
#      run: cmake
#      timeout-minutes: 2
#    - name: Clean repository
#      run: make clean
#    - name: Check executable files exists
#      run: |
#        IFS=',' read -ra ADDR <<< $EXECUTABLES
#        for i in "${ADDR[@]}"; do
#          if [[ ! -x "./${i}" ]]; then
#            exit 1
#          fi
#        done
#    - name: Run tests
#      run: make tests_run
#      timeout-minutes: 2

  push_to_mirror:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: check_repository_cleanliness
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ env.MIRROR_URL }}
          ssh_private_key:
            ${{ secrets.SSH_PRIVATE_KEY }}
